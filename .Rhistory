library(devtools
)
library(roxygen2)
install.packages(c("testthat", "knitr"))
use.r("PDMN")
use_r("PDMN")
check()
use_mit_license()
use_package("pracma")
use_package("pracma")
use_package("R.utils")
use_package("rlang")
check()
check()
use_package("stats")
check()
check()
document()
?PDMN
document()
?PDMN
use_r("runPDM")
check()
document()
?runPDM
?PDMN
check()
r_use("multivariateMediation")
use_r("multivariateMediation")
document()
document()
?multivariateMediation
document()
document()
?multivariateMediation
document()
?multivariateMediation
document()
?multivariateMediation
document()
?multivariateMediation
document()
?multivariateMediation
document()
?multivariateMediation
check()
use_package("graphics")
check()
use_r("PDMNboot")
check()
use_r("BootPDM")
use_r("runBootstrapPDM")
use_r("BootPDMJoint")
check()
check()
library(devtools)
library(roxygen2)
if(TRUE)
{cat('hi')}
if(1){cat('hi')}
if(FALSE){cat('hi')}
if(0){cat('hi')}
cat('\nLow dimension data found in input-structure. Skipping dimension reduction.\n')
document()
?multivariateMediation
?PDMN
?runPDM
?runBootstrapPDM
?PDMNboot
?BootPDMJoint
?BootPDM
check()
check()
check()
check()
install()
# Files for saving intermediate output
# Create a folder to save all package results
out_Dir <- "radPDM_results"
current_dir <- paste0('~/', out_Dir)
dir.create(out_Dir)
getwd()
build_manual()
install()
document()
?multivariateMediation
install()
print("hi")
prac <- function(x){
if (x == 2){}
else{
stop("No Good")
}
print("Bye")
}
prac(3)
prac(2)
document()
library(roxygen2)
library(devtools)
library(testthat)
library(knitr)
document()
check()
document()
check()
library(devtools)
check()
check()
check()
check()
library(devtools)
check()
getwd()
file.rename("/R/BootPDM.R", "/R/.BootPDM.R")
file.rename("~/R/BootPDM.R", "~/R/.BootPDM.R")
file.rename("C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/BootPDM.R", "C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/.BootPDM.R")
file.rename("C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/BootPDMJoint.R", "C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/.BootPDMJoint.R")
file.rename("C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/runPDM.R", "C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/.runPDM.R")
file.rename("C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/PDMN.R", "C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/.PDMN.R")
file.rename("C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/PDMNboot.R", "C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/.PDMNboot.R")
file.rename("C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/runBootstrapPDM.R", "C:/Users/emily/Documents/Comp Bio/Ghosh Lab/!Thesis Work_radPDM/my_R_projects/radPDM/R/.runBootstrapPDM.R")
library(devtools)
check()
check()
check()
load_all()
check()
document()
load_all()
check()
install()
check()
library(devtools)
check()
library(devtools)
check()
build()
check()
install()
install.packages('radPDM')
install.packages("radPDM")
library(radPDM)
document()
library(roxygen2)
document()
library(knitr)
document()
library(devtools)
document()
build_manual()
library(devtools)
library(knitr)
library(roxygen2)
document()
build_manual()
library(knitr)
library(devtools)
library(roxygen2)
library(testthat)
document()
build_readme()
build_manual()
build_manual()
install()
library(knitr)
library(testthat)
library(devtools)
library(roxygen2)
document()
build_manual()
check()
check()
build_manual()
install()
check()
check()
library(devtools)
library(roxygen2)
library(knitr)
library(testthat)
check()
install()
library(c(testthat, knitr, devtools, roxygen2))
library(devtoold)
library(devtools)
library(roxygen2)
document()
build_manual()
install()
library(devtools)
install()
install()
